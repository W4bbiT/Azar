{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(http) {\n      this.http = http;\n    }\n    // Get all users with pagination\n    getAllUsers(page, limit) {\n      const params = new HttpParams().set('page', String(page)).set('limit', String(limit));\n      return this.http.get('/api/user', {\n        params\n      }).pipe(catchError(this.handleError));\n    }\n    // Get one user\n    getOneUser() {\n      return this.http.get('/api/user/profile').pipe(catchError(this.handleError));\n    }\n    // Delete user\n    deleteUser(id) {\n      return this.http.delete(`/api/admin/du/${id}`).pipe(catchError(this.handleError));\n    }\n    // Create a user\n    createUser(data) {\n      return this.http.post('/api/user/register', data, httpOptions).pipe(catchError(this.handleError));\n    }\n    // Edit user\n    editUser(data) {\n      return this.http.patch('/api/user/update-user', data, httpOptions).pipe(catchError(this.handleError));\n    }\n    //addreview and rating\n    addReview(pId, data) {\n      console.log(\"Id: \" + pId + \"rating: \" + data.rating + \"review: \" + data.review);\n      return this.http.post(`/api/user/review/add-review/${pId}`, data, httpOptions).pipe(catchError(this.handleError));\n    }\n    // Get cart for user\n    getCartForUser() {\n      return this.http.get('/api/user/cart').pipe(catchError(this.handleError));\n    }\n    // Add a product to cart\n    addProductToMyCart(pid, data) {\n      return this.http.post(`/api/user/addtocart/${pid}`, data, httpOptions).pipe(catchError(this.handleError));\n    }\n    // Update cart\n    updateCart(pid, data) {\n      return this.http.patch(`/api/user/editcart/${pid}`, data, httpOptions).pipe(catchError(this.handleError));\n    }\n    // Delete a product from cart\n    pullProductFromCart(pid) {\n      return this.http.delete(`/api/user/delete-item/${pid}`).pipe(catchError(this.handleError));\n    }\n    // Checkout cart\n    checkoutCart() {\n      return this.http.post('/api/user/orders', httpOptions).pipe(catchError(this.handleError));\n    }\n    emptyCart() {\n      return this.http.delete('/api/user/empty-cart', httpOptions).pipe(catchError(this.handleError));\n    }\n    // Get orders for this user\n    getOrderForThisUser() {\n      return this.http.get('/api/user/orders').pipe(catchError(this.handleError));\n    }\n    getOneOrder(oId) {\n      return this.http.get(`/api/user/orders/${oId}`).pipe(catchError(this.handleError));\n    }\n    // Handle errors\n    handleError(error) {\n      console.error('An error occurred:', error);\n      return throwError('Something went wrong. Please try again later.');\n    }\n  }\n  UsersService.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsersService;\n})();\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}