{"ast":null,"code":"import * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nexport let TokenStorageService = /*#__PURE__*/(() => {\n  class TokenStorageService {\n    constructor() {}\n    setLocalStorage(responseObj) {\n      const expiresAt = moment().add(moment.duration(responseObj.expiresIn).asSeconds(), 'seconds');\n      localStorage.setItem('accessToken', responseObj.accessToken);\n      localStorage.setItem('expiresIn', JSON.stringify(expiresAt.valueOf()));\n      localStorage.setItem('role', responseObj.role);\n      console.log('expiresIn', JSON.stringify(expiresAt.valueOf()));\n      console.log(responseObj.expiresIn);\n    }\n    logout() {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('expiresIn');\n      localStorage.removeItem('role');\n    }\n    isLoggedIn() {\n      const authToken = localStorage.getItem('accessToken');\n      const expiresIn = localStorage.getItem('expiresIn');\n      if (authToken && expiresIn) {\n        const expirationTimeInSeconds = parseInt(expiresIn) / 1000; // Convert milliseconds to seconds\n        const expirationTime = moment.unix(expirationTimeInSeconds);\n        const currentTime = moment();\n        const isTokenValid = expirationTime.isAfter(currentTime);\n        console.log('Expiration Time:', expirationTime);\n        console.log('Current Time:', currentTime);\n        console.log('Is Token Valid:', isTokenValid);\n        return isTokenValid;\n      }\n      return false;\n    }\n    isAdmin() {\n      if (this.isLoggedIn()) {\n        // <-- Add parentheses to call the method\n        if (localStorage.getItem('role') === 'STAR') {\n          return true;\n        }\n        return false;\n      }\n      return false;\n    }\n  }\n  TokenStorageService.ɵfac = function TokenStorageService_Factory(t) {\n    return new (t || TokenStorageService)();\n  };\n  TokenStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenStorageService,\n    factory: TokenStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return TokenStorageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}