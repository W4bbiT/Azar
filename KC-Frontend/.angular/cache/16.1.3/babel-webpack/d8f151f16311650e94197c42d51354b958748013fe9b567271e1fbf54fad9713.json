{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/token-storage.service\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, formBuilder, router, tokenStorage) {\n      this.authService = authService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.tokenStorage = tokenStorage;\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    submitForm() {\n      if (this.loginForm.invalid) {\n        return;\n      }\n      this.authService.login(this.loginForm.value).subscribe({\n        next: data => {\n          console.log(data);\n          this.tokenStorage.setLocalStorage(data);\n          this.router.navigate(['/profile']).then(() => {\n            window.location.reload();\n          });\n        },\n        error: err => {\n          alert(\"Sign In with correct credentials\");\n        }\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.TokenStorageService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"m-3\", \"justify-center\", \"items-center\"], [1, \"md:flex\", \"text-whiteish\", 3, \"formGroup\"], [1, \"md:flex\"], [1, \"block\", \"p-2\", \"m-1\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter email\", 1, \"bg-transparent\", \"block\", \"m-1\", \"p-2\", \"shadow-blackish\", \"shadow-inner\", \"rounded-full\"], [\"type\", \"text\", \"formControlName\", \"password\", \"placeholder\", \"Enter password\", 1, \"bg-transparent\", \"block\", \"m-1\", \"p-2\", \"shadow-blackish\", \"shadow-inner\", \"rounded-full\"], [1, \"md:block\", \"p-2\", \"text-right\"], [1, \"shadow-blackish\", \"shadow-sm\", \"rounded-full\", \"p-2\", \"w-20\", \"active:shadow-inner\", \"active:shadow-blackish\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_11_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(12, \"Sign-In\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}