{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProductsService = /*#__PURE__*/(() => {\n  class ProductsService {\n    constructor(http) {\n      this.http = http;\n    }\n    // Get all products with pagination\n    getAllProducts(page, limit) {\n      const params = new HttpParams().set('page', String(page)).set('limit', String(limit));\n      return this.http.get('/api/product/', {\n        params\n      });\n    }\n    //get a product by id\n    getOneProduct(pId) {\n      return this.http.get(`/api/product/${pId}`);\n    }\n    //top product limit 10\n    getTopProducts() {\n      return this.http.get(`/api/product/top-products`);\n    }\n    getFeaturedProduct() {\n      return this.http.get(`/api/product/featured-products`);\n    }\n    //delete product\n    deleteProduct(pId) {\n      return this.http.delete(`/api/admin/dp/${pId}`);\n    }\n    //create a product listing\n    createProduct(data) {\n      return this.http.post('/api/admin/ap', data, httpOptions);\n    }\n    //edit product\n    editProduct(pId, data) {\n      return this.http.patch(`/api/admin/up/${pId}`, data, httpOptions);\n    }\n    // search products by name\n    searchProduct(productName) {\n      return this.http.get(`/api/product/search?name=${productName}`);\n    }\n    // search products by name\n    searchCategory(categories, page, limit) {\n      const combinedCategories = categories.join('-'); // Combine categories with hyphens\n      const params = new HttpParams().set('page', page.toString()).set('limit', limit.toString());\n      return this.http.get(`/api/product/category-search/${combinedCategories}`, {\n        params\n      });\n    }\n    // Get reviews for a product with pagination\n    getProductReviews(pId, page, limit) {\n      const params = new HttpParams().set('page', String(page)).set('limit', String(limit));\n      return this.http.get(`/api/product/${pId}/reviews`, {\n        params\n      });\n    }\n    // Get reviews for a product with pagination\n    getTopReviews() {\n      return this.http.get('/api/user/review/get-top-reviews');\n    }\n  }\n  ProductsService.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}